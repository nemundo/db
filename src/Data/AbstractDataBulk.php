<?phpnamespace Nemundo\Db\Data;use Nemundo\Core\Directory\TextDirectory;use Nemundo\Db\DbConfig;use Nemundo\Db\Execute\SqlExecute;use Nemundo\Db\Sql\InsertQuery;use Nemundo\Model\ModelConfig;abstract class AbstractDataBulk extends AbstractData{    /**     * @var InsertQuery     */    private $insertQuery;    /**     * @var int     */    private $bulkCount;    /**     * @var TextDirectory     */    //private $valuePart;    /**     * @var bool     */    //private $updateOnDuplicate = false;    public function __construct()    {        parent::__construct();        $this->loadDataBulk();    }    private function loadDataBulk()    {        $this->bulkCount = 0;        $this->insertQuery = new InsertQuery();        //$this->valuePart = new TextDirectory();    }    protected function setValue($fieldName, $value)    {        if ($this->bulkCount == 0) {            $this->insertQuery->addField($fieldName);        }        $this->insertQuery->addValue($fieldName, $value);    }    public function save()    {        $this->bulkCount++;        $this->insertQuery->closeValuePart();        if ($this->bulkCount >= DbConfig::$bulkCount) {            $this->saveBulk();        }    }    public function saveBulk()    {        if ($this->bulkCount > 0) {            $this->insertQuery->tableName = $this->tableName;            $this->insertQuery->ignoreIfExists = $this->ignoreIfExists;            $this->insertQuery->updateOnDuplicate = $this->updateOnDuplicate;            $execute = new SqlExecute();            $execute->connection=$this->connection;            $execute->execute($this->insertQuery->getSqlParameter());        }        $this->loadDataBulk();    }}